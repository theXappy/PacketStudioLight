using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MemoryPcapng.Tests
{
    public class EnhancedPacketBlockTests
    {
        [Test]
        public void TestProps()
        {
            // Arrange
            byte[] data = {
                0x06, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x09, 0x06, 0x00,
                0x7B, 0x46, 0x09, 0xC3, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
                0x45, 0x00, 0x00, 0x34, 0xE3, 0x25, 0x40, 0x00, 0x80, 0x06, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x01,
                0x7F, 0x00, 0x00, 0x01, 0xB1, 0x00, 0xB0, 0xFD, 0x0F, 0xC4, 0x3A, 0x3E, 0xDC, 0xF1, 0x42, 0x24,
                0x50, 0x18, 0xF4, 0xDF, 0x67, 0x9C, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xB6, 0x15, 0x00, 0x00,
                0xD5, 0x15, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00
            };
            byte[] payload = {
                0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x34, 0xE3, 0x25, 0x40, 0x00, 0x80, 0x06, 0x00, 0x00,
                0x7F, 0x00, 0x00, 0x01, 0x7F, 0x00, 0x00, 0x01, 0xB1, 0x00, 0xB0, 0xFD, 0x0F, 0xC4, 0x3A, 0x3E,
                0xDC, 0xF1, 0x42, 0x24, 0x50, 0x18, 0xF4, 0xDF, 0x67, 0x9C, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,
                0xB6, 0x15, 0x00, 0x00, 0xD5, 0x15, 0x00, 0x00
            };


            // Act
            EnhancedPacketBlock epb = new EnhancedPacketBlock(data);

            // Assert
            Assert.That(epb.BlockType, Is.EqualTo(6));
            Assert.That(epb.BlockTotalLength, Is.EqualTo(88));
            Assert.That(epb.InterfaceID, Is.EqualTo(0));
            Assert.That(epb.Timestamp, Is.EqualTo(-4392902467427890796));
            Assert.That(epb.CapturedPacketLength, Is.EqualTo(56));
            Assert.That(epb.OriginalPacketLength, Is.EqualTo(56));
            Assert.That(epb.PacketData.ToArray().SequenceEqual(payload));
            Assert.That(epb.Options.IsEmpty);
        }
    }
}
